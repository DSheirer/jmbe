/*
 * ******************************************************************************
 * Copyright (C) 2015-2019 Dennis Sheirer
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 * *****************************************************************************
 */

package jmbe.codec.imbe;

import java.util.Map;
import java.util.TreeMap;

/**
 * J-block harmonic (L) allocations
 */
public enum HarmonicAllocation
{
    L09( 9, new int[][]{{2}, {3}, {4}, {5, 8}, {6, 9}, {7, 10}}),
    L10(10, new int[][]{{2}, {3}, {4, 8}, {5, 9}, {6, 10}, {7, 11}}),
    L11(11, new int[][]{{2}, {3, 8}, {4, 9}, {5, 10}, {6, 11}, {7, 12}}),
    L12(12, new int[][]{{2, 8}, {3, 9}, {4, 10}, {5, 11}, {6, 12}, {7, 13}}),
    L13(13, new int[][]{{2, 8}, {3, 9}, {4, 10}, {5, 11}, {6, 12}, {7, 13, 14}}),
    L14(14, new int[][]{{2, 8}, {3, 9}, {4, 10}, {5, 11}, {6, 12, 13}, {7, 14, 15}}),
    L15(15, new int[][]{{2, 8}, {3, 9}, {4, 10}, {5, 11, 12}, {6, 13, 14}, {7, 15, 16}}),
    L16(16, new int[][]{{2, 8}, {3, 9}, {4, 10, 11}, {5, 12, 13}, {6, 14, 15}, {7, 16, 17}}),
    L17(17, new int[][]{{2, 8}, {3, 9, 10}, {4, 11, 12}, {5, 13, 14}, {6, 15, 16}, {7, 17, 18}}),
    L18(18, new int[][]{{2, 8, 9}, {3, 10, 11}, {4, 12, 13}, {5, 14, 15}, {6, 16, 17}, {7, 18, 19}}),
    L19(19, new int[][]{{2, 8, 9}, {3, 10, 11}, {4, 12, 13}, {5, 14, 15}, {6, 16, 17}, {7, 18, 19, 20}}),
    L20(20, new int[][]{{2, 8, 9}, {3, 10, 11}, {4, 12, 13}, {5, 14, 15}, {6, 16, 17, 18}, {7, 19, 20, 21}}),
    L21(21, new int[][]{{2, 8, 9}, {3, 10, 11}, {4, 12, 13}, {5, 14, 15, 16}, {6, 17, 18, 19}, {7, 20, 21, 22}}),
    L22(22, new int[][]{{2, 8, 9}, {3, 10, 11}, {4, 12, 13, 14}, {5, 15, 16, 17}, {6, 18, 19, 20}, {7, 21, 22, 23}}),
    L23(23, new int[][]{{2, 8, 9}, {3, 10, 11, 12}, {4, 13, 14, 15}, {5, 16, 17, 18}, {6, 19, 20, 21}, {7, 22, 23, 24}}),
    L24(24, new int[][]{{2, 8, 9, 10}, {3, 11, 12, 13}, {4, 14, 15, 16}, {5, 17, 18, 19}, {6, 20, 21, 22}, {7, 23, 24, 25}}),
    L25(25, new int[][]{{2, 8, 9, 10}, {3, 11, 12, 13}, {4, 14, 15, 16}, {5, 17, 18, 19}, {6, 20, 21, 22}, {7, 23, 24, 25, 26}}),
    L26(26, new int[][]{{2, 8, 9, 10}, {3, 11, 12, 13}, {4, 14, 15, 16}, {5, 17, 18, 19}, {6, 20, 21, 22, 23}, {7, 24, 25, 26, 27}}),
    L27(27, new int[][]{{2, 8, 9, 10}, {3, 11, 12, 13}, {4, 14, 15, 16}, {5, 17, 18, 19, 20}, {6, 21, 22, 23, 24}, {7, 25, 26, 27, 28}}),
    L28(28, new int[][]{{2, 8, 9, 10}, {3, 11, 12, 13}, {4, 14, 15, 16, 17}, {5, 18, 19, 20, 21}, {6, 22, 23, 24, 25}, {7, 26, 27, 28, 29}}),
    L29(29, new int[][]{{2, 8, 9, 10}, {3, 11, 12, 13, 14}, {4, 15, 16, 17, 18}, {5, 19, 20, 21, 22}, {6, 23, 24, 25, 26}, {7, 27, 28, 29, 30}}),
    L30(30, new int[][]{{2, 8, 9, 10, 11}, {3, 12, 13, 14, 15}, {4, 16, 17, 18, 19}, {5, 20, 21, 22, 23}, {6, 24, 25, 26, 27}, {7, 28, 29, 30, 31}}),
    L31(31, new int[][]{{2, 8, 9, 10, 11}, {3, 12, 13, 14, 15}, {4, 16, 17, 18, 19}, {5, 20, 21, 22, 23}, {6, 24, 25, 26, 27}, {7, 28, 29, 30, 31, 32}}),
    L32(32, new int[][]{{2, 8, 9, 10, 11}, {3, 12, 13, 14, 15}, {4, 16, 17, 18, 19}, {5, 20, 21, 22, 23}, {6, 24, 25, 26, 27, 28}, {7, 29, 30, 31, 32, 33}}),
    L33(33, new int[][]{{2, 8, 9, 10, 11}, {3, 12, 13, 14, 15}, {4, 16, 17, 18, 19}, {5, 20, 21, 22, 23, 24}, {6, 25, 26, 27, 28, 29}, {7, 30, 31, 32, 33, 34}}),
    L34(34, new int[][]{{2, 8, 9, 10, 11}, {3, 12, 13, 14, 15}, {4, 16, 17, 18, 19, 20}, {5, 21, 22, 23, 24, 25}, {6, 26, 27, 28, 29, 30}, {7, 31, 32, 33, 34, 35}}),
    L35(35, new int[][]{{2, 8, 9, 10, 11}, {3, 12, 13, 14, 15, 16}, {4, 17, 18, 19, 20, 21}, {5, 22, 23, 24, 25, 26}, {6, 27, 28, 29, 30, 31}, {7, 32, 33, 34, 35, 36}}),
    L36(36, new int[][]{{2, 8, 9, 10, 11, 12}, {3, 13, 14, 15, 16, 17}, {4, 18, 19, 20, 21, 22}, {5, 23, 24, 25, 26, 27}, {6, 28, 29, 30, 31, 32}, {7, 33, 34, 35, 36, 37}}),
    L37(37, new int[][]{{2, 8, 9, 10, 11, 12}, {3, 13, 14, 15, 16, 17}, {4, 18, 19, 20, 21, 22}, {5, 23, 24, 25, 26, 27}, {6, 28, 29, 30, 31, 32}, {7, 33, 34, 35, 36, 37, 38}}),
    L38(38, new int[][]{{2, 8, 9, 10, 11, 12}, {3, 13, 14, 15, 16, 17}, {4, 18, 19, 20, 21, 22}, {5, 23, 24, 25, 26, 27}, {6, 28, 29, 30, 31, 32, 33}, {7, 34, 35, 36, 37, 38, 39}}),
    L39(39, new int[][]{{2, 8, 9, 10, 11, 12}, {3, 13, 14, 15, 16, 17}, {4, 18, 19, 20, 21, 22}, {5, 23, 24, 25, 26, 27, 28}, {6, 29, 30, 31, 32, 33, 34}, {7, 35, 36, 37, 38, 39, 40}}),
    L40(40, new int[][]{{2, 8, 9, 10, 11, 12}, {3, 13, 14, 15, 16, 17}, {4, 18, 19, 20, 21, 22, 23}, {5, 24, 25, 26, 27, 28, 29}, {6, 30, 31, 32, 33, 34, 35}, {7, 36, 37, 38, 39, 40, 41}}),
    L41(41, new int[][]{{2, 8, 9, 10, 11, 12}, {3, 13, 14, 15, 16, 17, 18}, {4, 19, 20, 21, 22, 23, 24}, {5, 25, 26, 27, 28, 29, 30}, {6, 31, 32, 33, 34, 35, 36}, {7, 37, 38, 39, 40, 41, 42}}),
    L42(42, new int[][]{{2, 8, 9, 10, 11, 12, 13}, {3, 14, 15, 16, 17, 18, 19}, {4, 20, 21, 22, 23, 24, 25}, {5, 26, 27, 28, 29, 30, 31}, {6, 32, 33, 34, 35, 36, 37}, {7, 38, 39, 40, 41, 42, 43}}),
    L43(43, new int[][]{{2, 8, 9, 10, 11, 12, 13}, {3, 14, 15, 16, 17, 18, 19}, {4, 20, 21, 22, 23, 24, 25}, {5, 26, 27, 28, 29, 30, 31}, {6, 32, 33, 34, 35, 36, 37}, {7, 38, 39, 40, 41, 42, 43, 44}}),
    L44(44, new int[][]{{2, 8, 9, 10, 11, 12, 13}, {3, 14, 15, 16, 17, 18, 19}, {4, 20, 21, 22, 23, 24, 25}, {5, 26, 27, 28, 29, 30, 31}, {6, 32, 33, 34, 35, 36, 37, 38}, {7, 39, 40, 41, 42, 43, 44, 45}}),
    L45(45, new int[][]{{2, 8, 9, 10, 11, 12, 13}, {3, 14, 15, 16, 17, 18, 19}, {4, 20, 21, 22, 23, 24, 25}, {5, 26, 27, 28, 29, 30, 31, 32}, {6, 33, 34, 35, 36, 37, 38, 39}, {7, 40, 41, 42, 43, 44, 45, 46}}),
    L46(46, new int[][]{{2, 8, 9, 10, 11, 12, 13}, {3, 14, 15, 16, 17, 18, 19}, {4, 20, 21, 22, 23, 24, 25, 26}, {5, 27, 28, 29, 30, 31, 32, 33}, {6, 34, 35, 36, 37, 38, 39, 40}, {7, 41, 42, 43, 44, 45, 46, 47}}),
    L47(47, new int[][]{{2, 8, 9, 10, 11, 12, 13}, {3, 14, 15, 16, 17, 18, 19, 20}, {4, 21, 22, 23, 24, 25, 26, 27}, {5, 28, 29, 30, 31, 32, 33, 34}, {6, 35, 36, 37, 38, 39, 40, 41}, {7, 42, 43, 44, 45, 46, 47, 48}}),
    L48(48, new int[][]{{2, 8, 9, 10, 11, 12, 13, 14}, {3, 15, 16, 17, 18, 19, 20, 21}, {4, 22, 23, 24, 25, 26, 27, 28}, {5, 29, 30, 31, 32, 33, 34, 35}, {6, 36, 37, 38, 39, 40, 41, 42}, {7, 43, 44, 45, 46, 47, 48, 49}}),
    L49(49, new int[][]{{2, 8, 9, 10, 11, 12, 13, 14}, {3, 15, 16, 17, 18, 19, 20, 21}, {4, 22, 23, 24, 25, 26, 27, 28}, {5, 29, 30, 31, 32, 33, 34, 35}, {6, 36, 37, 38, 39, 40, 41, 42}, {7, 43, 44, 45, 46, 47, 48, 49, 50}}),
    L50(50, new int[][]{{2, 8, 9, 10, 11, 12, 13, 14}, {3, 15, 16, 17, 18, 19, 20, 21}, {4, 22, 23, 24, 25, 26, 27, 28}, {5, 29, 30, 31, 32, 33, 34, 35}, {6, 36, 37, 38, 39, 40, 41, 42, 43}, {7, 44, 45, 46, 47, 48, 49, 50, 51}}),
    L51(51, new int[][]{{2, 8, 9, 10, 11, 12, 13, 14}, {3, 15, 16, 17, 18, 19, 20, 21}, {4, 22, 23, 24, 25, 26, 27, 28}, {5, 29, 30, 31, 32, 33, 34, 35, 36}, {6, 37, 38, 39, 40, 41, 42, 43, 44}, {7, 45, 46, 47, 48, 49, 50, 51, 52}}),
    L52(52, new int[][]{{2, 8, 9, 10, 11, 12, 13, 14}, {3, 15, 16, 17, 18, 19, 20, 21}, {4, 22, 23, 24, 25, 26, 27, 28, 29}, {5, 30, 31, 32, 33, 34, 35, 36, 37}, {6, 38, 39, 40, 41, 42, 43, 44, 45}, {7, 46, 47, 48, 49, 50, 51, 52, 53}}),
    L53(53, new int[][]{{2, 8, 9, 10, 11, 12, 13, 14}, {3, 15, 16, 17, 18, 19, 20, 21, 22}, {4, 23, 24, 25, 26, 27, 28, 29, 30}, {5, 31, 32, 33, 34, 35, 36, 37, 38}, {6, 39, 40, 41, 42, 43, 44, 45, 46}, {7, 47, 48, 49, 50, 51, 52, 53, 54}}),
    L54(54, new int[][]{{2, 8, 9, 10, 11, 12, 13, 14, 15}, {3, 16, 17, 18, 19, 20, 21, 22, 23}, {4, 24, 25, 26, 27, 28, 29, 30, 31}, {5, 32, 33, 34, 35, 36, 37, 38, 39}, {6, 40, 41, 42, 43, 44, 45, 46, 47}, {7, 48, 49, 50, 51, 52, 53, 54, 55}}),
    L55(55, new int[][]{{2, 8, 9, 10, 11, 12, 13, 14, 15}, {3, 16, 17, 18, 19, 20, 21, 22, 23}, {4, 24, 25, 26, 27, 28, 29, 30, 31}, {5, 32, 33, 34, 35, 36, 37, 38, 39}, {6, 40, 41, 42, 43, 44, 45, 46, 47}, {7, 48, 49, 50, 51, 52, 53, 54, 55, 56}}),
    L56(56, new int[][]{{2, 8, 9, 10, 11, 12, 13, 14, 15}, {3, 16, 17, 18, 19, 20, 21, 22, 23}, {4, 24, 25, 26, 27, 28, 29, 30, 31}, {5, 32, 33, 34, 35, 36, 37, 38, 39}, {6, 40, 41, 42, 43, 44, 45, 46, 47, 48}, {7, 49, 50, 51, 52, 53, 54, 55, 56, 57}}),
    UNKNOWN(0, new int[][]{});

    private int mL;
    private int[][] mAllocations;
    private static Map<Integer,HarmonicAllocation> sLOOKUP_MAP = new TreeMap<>();

    static
    {
        for(HarmonicAllocation harmonicAllocation : HarmonicAllocation.values())
        {
            sLOOKUP_MAP.put(harmonicAllocation.mL, harmonicAllocation);
        }
    }

    HarmonicAllocation(int L, int[][] blockHarmonics)
    {
        mL = L;
        mAllocations = blockHarmonics;
    }

    public int[][] getAllocations()
    {
        return mAllocations;
    }

    /**
     * Lookup the harmonic block size from the value of L harmonics
     */
    public static HarmonicAllocation fromL(int L)
    {
        return sLOOKUP_MAP.get(L);
    }
}

