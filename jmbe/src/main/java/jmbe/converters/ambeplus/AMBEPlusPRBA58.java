/*
 * ******************************************************************************
 * Copyright (C) 2015-2019 Dennis Sheirer
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 * *****************************************************************************
 */

package jmbe.converters.ambeplus;

/**
 * Predictive Residual Block Average (PRBA) enumeration with values for indices 5 - 8
 */
public enum AMBEPlusPRBA58
{
    V0(-0.460938f, -0.265625f, -0.281250f, -0.062500f),
    V1(-0.367188f, -0.117188f, -0.078125f, -0.054688f),
    V2(-0.250000f, -0.312500f, -0.164063f, -0.101563f),
    V3(-0.156250f, -0.078125f, -0.085938f, -0.203125f),
    V4(-0.468750f, -0.085938f, -0.171875f, 0.164063f),
    V5(-0.210938f, -0.039063f, -0.117188f, 0.085938f),
    V6(-0.187500f, -0.156250f, -0.289063f, 0.070313f),
    V7(-0.179688f, -0.117188f, -0.148438f, -0.046875f),
    V8(-0.320313f, -0.031250f, 0.140625f, -0.132813f),
    V9(-0.289063f, -0.140625f, 0.179688f, 0.015625f),
    V10(-0.179688f, -0.226563f, -0.007813f, -0.101563f),
    V11(-0.156250f, -0.031250f, 0.015625f, -0.093750f),
    V12(-0.390625f, -0.273438f, 0.046875f, 0.031250f),
    V13(-0.195313f, -0.203125f, -0.070313f, 0.039063f),
    V14(-0.171875f, -0.156250f, -0.039063f, 0.171875f),
    V15(-0.156250f, -0.085938f, 0.085938f, 0.125000f),
    V16(-0.304688f, 0.054688f, -0.210938f, -0.085938f),
    V17(-0.265625f, 0.140625f, -0.031250f, -0.132813f),
    V18(-0.242188f, 0.078125f, -0.031250f, 0.015625f),
    V19(-0.203125f, 0.000000f, -0.085938f, -0.070313f),
    V20(-0.453125f, 0.171875f, -0.062500f, 0.031250f),
    V21(-0.289063f, 0.125000f, -0.156250f, 0.093750f),
    V22(-0.179688f, 0.257813f, -0.054688f, 0.273438f),
    V23(-0.171875f, 0.226563f, -0.109375f, 0.015625f),
    V24(-0.312500f, -0.007813f, 0.000000f, 0.085938f),
    V25(-0.265625f, 0.265625f, 0.046875f, 0.101563f),
    V26(-0.234375f, 0.109375f, 0.125000f, -0.046875f),
    V27(-0.171875f, -0.015625f, 0.093750f, 0.007813f),
    V28(-0.414063f, 0.046875f, 0.101563f, 0.203125f),
    V29(-0.179688f, 0.093750f, 0.210938f, 0.125000f),
    V30(-0.179688f, -0.007813f, 0.007813f, 0.273438f),
    V31(-0.171875f, 0.085938f, 0.007813f, 0.132813f),
    V32(-0.062500f, -0.117188f, -0.257813f, -0.156250f),
    V33(-0.054688f, -0.226563f, -0.109375f, -0.015625f),
    V34(-0.046875f, -0.164063f, -0.070313f, -0.117188f),
    V35(-0.039063f, -0.031250f, -0.093750f, -0.085938f),
    V36(-0.156250f, -0.031250f, -0.015625f, 0.039063f),
    V37(-0.085938f, 0.015625f, -0.179688f, 0.164063f),
    V38(-0.078125f, -0.078125f, -0.070313f, 0.046875f),
    V39(-0.046875f, -0.195313f, -0.062500f, 0.109375f),
    V40(-0.093750f, -0.046875f, 0.109375f, -0.101563f),
    V41(-0.054688f, -0.007813f, 0.007813f, -0.007813f),
    V42(-0.039063f, -0.132813f, 0.031250f, -0.031250f),
    V43(-0.023438f, -0.148438f, 0.195313f, -0.085938f),
    V44(-0.148438f, -0.109375f, 0.023438f, 0.000000f),
    V45(-0.039063f, -0.085938f, 0.031250f, 0.085938f),
    V46(-0.039063f, -0.226563f, 0.117188f, 0.070313f),
    V47(-0.015625f, -0.015625f, 0.156250f, 0.156250f),
    V48(-0.109375f, 0.132813f, -0.109375f, -0.140625f),
    V49(-0.093750f, 0.023438f, -0.187500f, -0.007813f),
    V50(-0.093750f, 0.382813f, -0.062500f, -0.101563f),
    V51(-0.023438f, 0.101563f, -0.062500f, -0.007813f),
    V52(-0.140625f, 0.195313f, -0.273438f, 0.132813f),
    V53(-0.109375f, 0.125000f, -0.117188f, 0.062500f),
    V54(-0.085938f, 0.015625f, -0.078125f, 0.031250f),
    V55(-0.031250f, 0.203125f, -0.023438f, 0.125000f),
    V56(-0.125000f, 0.156250f, 0.078125f, -0.140625f),
    V57(-0.117188f, 0.085938f, 0.312500f, -0.101563f),
    V58(-0.093750f, 0.062500f, 0.007813f, -0.078125f),
    V59(-0.046875f, 0.046875f, 0.148438f, -0.023438f),
    V60(-0.125000f, 0.148438f, 0.007813f, 0.015625f),
    V61(-0.085938f, 0.046875f, 0.054688f, 0.039063f),
    V62(-0.054688f, 0.140625f, 0.117188f, 0.101563f),
    V63(-0.054688f, 0.039063f, -0.015625f, 0.109375f),
    V64(0.046875f, -0.062500f, -0.054688f, -0.226563f),
    V65(0.062500f, -0.132813f, -0.093750f, -0.101563f),
    V66(0.078125f, -0.015625f, -0.132813f, -0.023438f),
    V67(0.085938f, -0.421875f, -0.140625f, -0.062500f),
    V68(-0.007813f, -0.054688f, -0.054688f, 0.179688f),
    V69(0.015625f, -0.078125f, -0.203125f, 0.054688f),
    V70(0.015625f, -0.093750f, -0.078125f, 0.023438f),
    V71(0.062500f, -0.179688f, -0.187500f, 0.148438f),
    V72(0.007813f, -0.039063f, 0.046875f, -0.093750f),
    V73(0.023438f, 0.031250f, 0.117188f, -0.179688f),
    V74(0.101563f, -0.171875f, 0.093750f, -0.171875f),
    V75(0.101563f, -0.023438f, -0.023438f, -0.125000f),
    V76(-0.007813f, -0.039063f, 0.109375f, 0.023438f),
    V77(0.046875f, -0.015625f, 0.015625f, 0.078125f),
    V78(0.054688f, -0.046875f, -0.023438f, -0.023438f),
    V79(0.070313f, -0.140625f, 0.062500f, -0.015625f),
    V80(0.007813f, 0.070313f, -0.031250f, -0.210938f),
    V81(0.015625f, 0.140625f, -0.179688f, -0.046875f),
    V82(0.023438f, 0.039063f, -0.039063f, -0.039063f),
    V83(0.054688f, 0.117188f, -0.007813f, -0.101563f),
    V84(0.015625f, 0.046875f, -0.117188f, 0.078125f),
    V85(0.054688f, 0.054688f, -0.281250f, 0.164063f),
    V86(0.062500f, 0.273438f, -0.125000f, 0.085938f),
    V87(0.093750f, 0.101563f, -0.070313f, 0.046875f),
    V88(-0.015625f, 0.125000f, 0.046875f, -0.031250f),
    V89(-0.007813f, 0.273438f, 0.054688f, 0.000000f),
    V90(0.070313f, 0.039063f, 0.070313f, -0.023438f),
    V91(0.109375f, 0.195313f, 0.093750f, -0.218750f),
    V92(0.046875f, 0.078125f, 0.039063f, 0.070313f),
    V93(0.054688f, 0.101563f, 0.023438f, 0.265625f),
    V94(0.070313f, 0.125000f, 0.273438f, 0.031250f),
    V95(0.093750f, 0.335938f, 0.164063f, 0.132813f),
    V96(0.195313f, -0.101563f, 0.015625f, -0.046875f),
    V97(0.234375f, -0.171875f, -0.164063f, -0.125000f),
    V98(0.296875f, -0.085938f, -0.117188f, 0.031250f),
    V99(0.507813f, -0.179688f, -0.117188f, 0.015625f),
    V100(0.109375f, -0.179688f, -0.046875f, 0.046875f),
    V101(0.132813f, -0.054688f, -0.039063f, 0.070313f),
    V102(0.171875f, 0.007813f, -0.117188f, 0.179688f),
    V103(0.429688f, 0.015625f, -0.039063f, 0.218750f),
    V104(0.132813f, -0.015625f, 0.156250f, -0.085938f),
    V105(0.140625f, -0.125000f, 0.218750f, 0.000000f),
    V106(0.265625f, -0.250000f, 0.101563f, -0.085938f),
    V107(0.382813f, -0.109375f, 0.101563f, -0.125000f),
    V108(0.117188f, -0.078125f, 0.085938f, 0.195313f),
    V109(0.218750f, -0.210938f, 0.054688f, 0.140625f),
    V110(0.265625f, -0.031250f, 0.054688f, 0.148438f),
    V111(0.304688f, 0.007813f, 0.250000f, 0.023438f),
    V112(0.117188f, 0.289063f, -0.226563f, -0.109375f),
    V113(0.132813f, 0.023438f, -0.195313f, -0.132813f),
    V114(0.164063f, 0.187500f, -0.070313f, -0.078125f),
    V115(0.281250f, 0.046875f, -0.101563f, -0.250000f),
    V116(0.164063f, 0.023438f, -0.023438f, -0.039063f),
    V117(0.171875f, 0.148438f, -0.265625f, 0.046875f),
    V118(0.210938f, 0.031250f, -0.156250f, 0.000000f),
    V119(0.390625f, 0.179688f, -0.101563f, -0.031250f),
    V120(0.234375f, 0.085938f, 0.031250f, -0.148438f),
    V121(0.250000f, 0.265625f, 0.156250f, -0.070313f),
    V122(0.312500f, 0.054688f, 0.093750f, -0.007813f),
    V123(0.531250f, 0.210938f, 0.085938f, -0.015625f),
    V124(0.117188f, 0.179688f, 0.054688f, 0.031250f),
    V125(0.132813f, 0.039063f, 0.140625f, 0.070313f),
    V126(0.218750f, 0.070313f, 0.007813f, 0.039063f),
    V127(0.226563f, 0.242188f, 0.007813f, 0.148438f);

    private float mG5;
    private float mG6;
    private float mG7;
    private float mG8;

    AMBEPlusPRBA58(float g5, float g6, float g7, float g8)
    {
        mG5 = g5;
        mG6 = g6;
        mG7 = g7;
        mG8 = g8;
    }

    public float getG5()
    {
        return mG5;
    }

    public float getG6()
    {
        return mG6;
    }

    public float getG7()
    {
        return mG7;
    }

    public float getG8()
    {
        return mG8;
    }

    public static AMBEPlusPRBA58 fromValue(int value)
    {
        if(0 <= value && value <= 127)
        {
            return AMBEPlusPRBA58.values()[value];
        }

        throw new IllegalArgumentException("Value must be in range 0-127.  Unsupported value: " + value);
    }
}
